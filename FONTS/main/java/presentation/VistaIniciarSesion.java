package presentation;

import exceptions.ContrasenaNoValidaExcepcion;
import exceptions.EscrituraIncorrectaFicheroExcepcion;
import exceptions.NombreUsuarioNoValidoExcepcion;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import java.util.*;

public class VistaIniciarSesion extends JFrame {
    CtrlPresentacion iCtrlPresentacion;
    private JPanel panelContenidos;
    private JLabel labelLogo;
    private JLabel labelUsuario;
    private JTextField fieldUsuario;
    private JLabel labelContra;
    private JPasswordField fieldContra;
    private JPanel panelBotones;
    private JButton btnLogin;
    private JButton btnVolver;
    private JPanel panelInput;

    public VistaIniciarSesion(CtrlPresentacion pCtrlPresentacion) {
        iCtrlPresentacion = pCtrlPresentacion;
        inicializarComponentes();
    }

    public void hacerVisible() {
        this.pack();
        this.setVisible(true);
    }

    public void hacerInvisible() {
        this.setVisible(false);
    }

    private void inicializarComponentes() {
        inicializar_frameVista();
        asignar_listenersComponentes();
    }

    private void inicializar_frameVista() {
        this.setTitle("Generador de teclados");
        this.setMinimumSize(new Dimension(500, 300));
        this.setPreferredSize(this.getMinimumSize());
        this.setResizable(false);

        // Posicion y operaciones por defecto
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // Se agrega panelContenidos al contentPane (el panelContenidos se
        // podria ahorrar y trabajar directamente sobre el contentPane)
        // JPanel contentPane = (JPanel) this.getContentPane();
        // contentPane.add(panelContenidos);
        this.setContentPane(panelContenidos);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelContenidos = new JPanel();
        panelContenidos.setLayout(new GridBagLayout());
        labelLogo = new JLabel();
        labelLogo.setText("Logo");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        panelContenidos.add(labelLogo, gbc);
        panelBotones = new JPanel();
        panelBotones.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelContenidos.add(panelBotones, gbc);
        btnLogin = new JButton();
        btnLogin.setText("Iniciar sesión");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelBotones.add(btnLogin, gbc);
        btnVolver = new JButton();
        btnVolver.setText("Volver");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelBotones.add(btnVolver, gbc);
        panelInput = new JPanel();
        panelInput.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelContenidos.add(panelInput, gbc);
        labelContra = new JLabel();
        labelContra.setText("Contraseña:");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelInput.add(labelContra, gbc);
        fieldContra = new JPasswordField();
        fieldContra.setColumns(15);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelInput.add(fieldContra, gbc);
        fieldUsuario = new JTextField();
        fieldUsuario.setColumns(15);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelInput.add(fieldUsuario, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 60;
        panelInput.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 60;
        panelInput.add(spacer2, gbc);
        labelUsuario = new JLabel();
        labelUsuario.setText("Usuario:");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelInput.add(labelUsuario, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelContenidos;
    }

    private void asignar_listenersComponentes() {

        // Listeners para los botones

        btnLogin.addActionListener
                (new ActionListener() {
                    public void actionPerformed(ActionEvent event) {
                        try {
                            actionPerformed_buttonIniciarSesion(event);
                        } catch (EscrituraIncorrectaFicheroExcepcion e) {
                            throw new RuntimeException(e);
                        } catch (NombreUsuarioNoValidoExcepcion e) {
                            throw new RuntimeException(e);
                        } catch (ContrasenaNoValidaExcepcion e) {
                            throw new RuntimeException(e);
                        }
                    }
                });

        btnVolver.addActionListener
                (new ActionListener() {
                    public void actionPerformed(ActionEvent event) {
                        actionPerformed_buttonCerrar(event);
                    }
                });

    }

    public void actionPerformed_buttonIniciarSesion(ActionEvent event) throws EscrituraIncorrectaFicheroExcepcion, NombreUsuarioNoValidoExcepcion, ContrasenaNoValidaExcepcion {
        String user = fieldUsuario.getText();
        String pass = fieldContra.getPassword().toString();

        if (pass.length() < 8) {
            JOptionPane.showMessageDialog(this, "Error: la contraseña ha de tener\n" +
                    "8 o más caractéres.");
        } else if (!iCtrlPresentacion.existeUsuario(user)) {
            JOptionPane.showMessageDialog(this, "Error: el usuario no existe.");
        } else if (iCtrlPresentacion.iniciarSesion(user, pass)) {
            iCtrlPresentacion.syncMenuPrincipal();
        } else {
            JOptionPane.showMessageDialog(this, "Error: usuario o contraseña incorrectos.");
        }
    }

    public void actionPerformed_buttonCerrar(ActionEvent event) {
        iCtrlPresentacion.cerrarPestañaIniciarSesion();
    }

    public void activar() {
        this.setEnabled(true);
    }

    public void desactivar() {
        this.setEnabled(false);
    }
}
